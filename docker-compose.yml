version: '3.8'

services:
  # 主应用服务
  starring:
    build: .
    container_name: starring-app
    ports:
      - "8000:8000"
    volumes:
      # 挂载照片目录，方便更新照片
      - ./photos:/app/photos
      # 挂载纹理目录
      - ./Textures:/app/Textures
      # 挂载日志目录
      - ./logs:/app/logs
    environment:
      - PYTHONUNBUFFERED=1
      - TZ=Asia/Shanghai
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - starring-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: starring-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Nginx配置文件
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # SSL证书目录（如果需要HTTPS）
      - ./ssl:/etc/nginx/ssl:ro
      # 静态文件目录
      - ./:/usr/share/nginx/html:ro
    depends_on:
      starring:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - starring-network

  # Redis缓存（可选，用于未来扩展）
  redis:
    image: redis:alpine
    container_name: starring-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - starring-network
    profiles:
      - cache

  # 监控服务（可选）
  watchtower:
    image: containrrr/watchtower
    container_name: starring-watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300
    restart: unless-stopped
    profiles:
      - monitoring

# 网络配置
networks:
  starring-network:
    driver: bridge

# 数据卷
volumes:
  redis-data:
    driver: local


